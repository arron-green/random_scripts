#!/usr/bin/python
import sys, getopt, os, time, shlex
from subprocess import check_call, call, Popen, check_output, PIPE

def main(argv):
    try:
        opts, args = getopt.getopt(argv[1:], "h:p:", ["help", "path="])
    except getopt.GetoptError:
        print "get opt error"
        usage()

    rootpath=None

    for o, a in opts:
        if o in ("-h", "--help"):
            usage()
        if o in ("-p", "--path"):
            rootpath = str(a)

    if rootpath is None:
        usage()

    if os.path.exists(rootpath):
        for path, dirs, files in os.walk(rootpath):
            if len(files) > 0:
                symlink(path)

    else:
        print "%s does not exist" % rootpath
        sys.exit(' ')

def symlink(path):
    try:
        last_mod = check_output(shlex.split("/bin/bash -c 'ls -t %s | grep -v current | head -1'" % path)).strip("\n")
        target = os.path.join(path, last_mod)
        sym = os.path.join(path, "current")
        call(shlex.split("/bin/bash -c 'ln -nsf %s %s'" % (target, sym)))
    except:
        print "error symlinking"

def usage():
    print ' -------------------------------------------------------------------------'
    print ' Creates symlink called current in each directory for `tail -F current` '
    print ' '
    print ' Typical usage: '
    print ' symlink_current --path=/path/to/my/dir '
    print ' '
    print ' --path root path to perform work (string) '
    print ' '
    print ' -------------------------------------------------------------------------'
    sys.exit(' ')

if __name__ =='__main__':
    main(sys.argv)
